TO-DO LIST:

EARLY TEST-RUN:

    1) U1 and U2 login
    --2) U1 and U2 deposit some money
    3) U2 logs out
    4) U1 logs in again on diff. terminal
    5) U1 sells particular stock, U1 deposits (as close to same time as possible)
    6) Admin logins in
    7) U1 buys particular stock / admin changes price of that stock
    8) Admin adds U3
    9) Admin logs out
    10) U3 logs in
    11) U1, U3 log-out.

SQL:
    depositing: (0) CHECK
    TRXLOG:
        make sure all actions/procedures, etc. appropriately register in TRXLOG (2)
	
JAVA:
    
main_menu (0)   CHECK
    0) quit (0) CHECK
    1) login (CHECK); go to user_menu (0) CHECK
    2) login (CHECK); go to admin_menu (0) CHECK 
   
     
user_menu (0) CHECK
    0) logout; go to main_menu (0) CHECK
    1) browse mutual funds;  PARTIAL CHECK
            check category of their choice (1)
            ask for fund to be sorted on highest price for a given day (2)
                if that day exists; if not, the day before it; if not, error
            alphabetically by fund name (1) CHECK
    2) find mutual fund; 
            up to two keywords; return products that contain ALL keywords  (2) -regex stuff
    3) deposit money/invest (0) - CONCURRENCY; CHECK
            submit an amount (0) - CONCURRENCY; CHECK
    4) sell shares 
            symbol (0) - CONCURRENCY; number of shares (0) - CONCURRENCY; CHECK
    5) buy shares
            symbol / number of shares (0) - CONCURRENCY; CHECK
            symbol / amount of money (0) - CONCURRENCY; CHECK
    6) change allocation -
            (insert new, consistent allocation into prefers and into allocation #) 1/2 - CONCURRENCY
    7) generate performance report (3)
            take current amounts of stocks, calculate current worth
            take current amounts of stocks, walk backwards through trxlog, calculate price paid
            difference is profitability

admin_menu  
    1) logout; go to main_menu (0) CHECK
    2) create new_customer  CHECK
            name, email, login, pw, is-ADMIN (0-1) CHECK
    3) update price quotes - CONCURRENCY - CHECK
    4) add new mutual fund (current price - set to latest date) (1-2) - CHECK
    5) manually update date (set latest date as what user sets IFF after last(mutual_date)) (1) 
    6) generate statistics (3)
        past x months (highest count of shares sold)
        most investors
    

USER MANUAL - CHECK

